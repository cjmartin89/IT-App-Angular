{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/quotes/filter.pipe.ts","webpack:///./src/app/quotes/quote-edit/quote-edit.component.css","webpack:///./src/app/quotes/quote-edit/quote-edit.component.html","webpack:///./src/app/quotes/quote-edit/quote-edit.component.ts","webpack:///./src/app/quotes/quote.service.ts","webpack:///./src/app/quotes/quotes.component.css","webpack:///./src/app/quotes/quotes.component.html","webpack:///./src/app/quotes/quotes.component.ts","webpack:///./src/app/quotes/quotes.model.ts","webpack:///./src/app/shared/data-storage.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-header (featureSelected)=\\\"onNavigate($event)\\\"></app-header>\\n<app-quotes></app-quotes>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  loadedFeature = 'quote';\n\n  onNavigate(feature: string) {\n    this.loadedFeature = feature;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { QuotesComponent } from './quotes/quotes.component';\nimport { CommonModule } from '@angular/common';\nimport { QuoteService } from './quotes/quote.service';\nimport { HttpModule } from '@angular/http';\nimport { DataStorageService } from './shared/data-storage.service';\nimport { QuoteEditComponent } from './quotes/quote-edit/quote-edit.component';\nimport { FormsModule } from '@angular/forms';\nimport { FilterPipe } from './quotes/filter.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    QuotesComponent,\n    QuoteEditComponent,\n    FilterPipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    CommonModule,\n    HttpModule\n  ],\n  providers: [QuoteService, DataStorageService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".header-style {\\n    background-color: black;\\n}\\n\\n.text-color {\\n    color: #80bd01;\\n}\\n\\n.navbar-collapse {\\n    padding: 5px;\\n}\\n\\n.logo {\\n    color: white;\\n    font-size: 40px;\\n}\\n\\n#header {\\n    border-bottom: 3px solid #80bd01;\\n}\"","module.exports = \"<nav>\\n    <div class=\\\"container-fluid header-style\\\" id=\\\"header\\\">\\n        <div class=\\\"navbar-header\\\">\\n            <a href=\\\"#\\\" class=\\\"navbar-brand logo\\\">Miami Beach</a>\\n            <a href=\\\"#\\\" class=\\\"navbar-brand text-color\\\">Quotes</a>\\n        </div>\\n        <div class=\\\"collapse navbar-collapse\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <!-- <li><a href=\\\"#\\\" (click)=\\\"onGet()\\\">Get Quotes</a></li>\\n                <li><a href=\\\"#\\\" (click)=\\\"onSelect('quote')\\\">Add Quote</a></li> -->\\n            </ul>\\n        </div>\\n    </div>\\n</nav>\"","import { Component, EventEmitter, Output } from '@angular/core';\nimport { DataStorageService } from '../shared/data-storage.service';\nimport { QuoteService } from '../quotes/quote.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n    private subscription: Subscription;\n\n    constructor(private dataStorageService: DataStorageService, private quoteService: QuoteService) {}\n\n  @Output() featureSelected = new EventEmitter<string>();\n    onSelect(feature: string) {\n        this.featureSelected.emit(feature);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: any, filterString: string, propName: string): any {\n    if (filterString === '') {\n      return value;\n    }\n    const resultArray = [];\n    for (const item of value) {\n      console.log(item[propName]);\n      if (item[propName] === filterString) {\n        resultArray.push(item);\n      }\n    }\n    return resultArray;\n  }\n}\n","module.exports = \".btn-success {\\n    background-color: #80bd01 !important;\\n}\\n\\n.btn {\\n    margin-right: 5px;\\n}\\n\\n.margin-left {\\n    margin-left: 5px;\\n}\\n\\n.margin-top {\\n    margin-top: 5px;\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <form (ngSubmit)=\\\"onAddItem(f)\\\" #f=\\\"ngForm\\\"\\n      >\\n        <div class=\\\"row margin-top\\\">\\n          <div class=\\\"col-sm-5 form-group margin-left\\\">\\n            <label for=\\\"quote\\\">Quote</label>\\n            <input\\n              type=\\\"text\\\"\\n              id=\\\"quote\\\"\\n              class=\\\"form-control\\\"\\n              name=\\\"quote\\\"\\n              ngModel\\n              >\\n          </div>\\n          <div class=\\\"col-sm-2 form-group\\\">\\n            <label for=\\\"person\\\">Person</label>\\n            <input\\n              type=\\\"text\\\"\\n              id=\\\"person\\\"\\n              class=\\\"form-control\\\"\\n              name=\\\"person\\\"\\n              ngModel\\n              >\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-12 margin-left\\\">\\n            <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" (click)=\\\"onAddItem\\\">{{ editMode ? 'Update' : 'Add'}}</button>\\n            <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onClear()\\\">Clear</button>\\n            <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"onDeleteQuote()\\\">Delete</button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n  \"","import { Component, OnInit, EventEmitter, Output, ViewChild, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Quote } from '../quotes.model';\nimport { QuoteService } from '../quote.service';\nimport { DataStorageService } from 'src/app/shared/data-storage.service';\nimport { Subscription } from 'rxjs';\nimport { Response } from '@angular/http';\n\n@Component({\n  selector: 'app-quote-edit',\n  templateUrl: './quote-edit.component.html',\n  styleUrls: ['./quote-edit.component.css']\n})\nexport class QuoteEditComponent implements OnInit, OnDestroy {\n  @ViewChild('f') quoteForm: NgForm;\n  @Output() quoteAdded = new EventEmitter<Quote>();\n  subscription: Subscription;\n  editMode = false;\n  editedItemIndex: number;\n  editedItem: Quote;\n\n  constructor(private quoteService: QuoteService, private dataService: DataStorageService) { }\n\n  onAddItem(form: NgForm) {\n    const value = form.value;\n    const person = value.person;\n    const quote = value.quote;\n    const newQuote = new Quote(person, quote, 0);\n    if (this.editMode) {\n      this.quoteService.updateQuote(this.editedItemIndex, newQuote)\n        .subscribe(\n          (response: Response) => {\n            console.log(response);\n          }\n        );\n      this.editMode = false;\n      form.reset();\n      this.dataService.getQuotes();\n    } else {\n      this.dataService.storeQuotes(newQuote)\n      .subscribe(\n        (response) => {\n          console.log(response.status);\n          if (response.status === 200) {\n            console.log(`Response = 200`);\n            this.dataService.getQuotes();\n          }\n        },\n        (error) => console.log(error)\n      );\n    }\n      form.reset();\n  }\n\n  onClear() {\n    console.log(`Clear Clicked`);\n    this.quoteForm.reset();\n    this.editMode = false;\n  }\n\n  onDeleteQuote() {\n    this.quoteService.deleteQuote(this.editedItemIndex)\n      .subscribe(\n        (response: Response) => {\n          console.log(response);\n        }\n      );\n      this.quoteForm.reset();\n      this.dataService.getQuotes();\n  }\n\n  ngOnInit() {\n    this.quoteService.startedEditing\n      .subscribe(\n        (index: number) => {\n          this.editedItemIndex = index;\n          this.editMode = true;\n          this.editedItem = this.quoteService.getQuote(index);\n          this.quoteForm.setValue({\n            person: this.editedItem.person,\n            quote: this.editedItem.quote\n          });\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Quote } from './quotes.model';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class QuoteService {\n    quotesChanged = new Subject<Quote[]>();\n    startedEditing = new Subject<number>();\n\n    baseUrl = 'https://calm-savannah-82295.herokuapp.com/quotes';\n\n    private quotes: Quote[] = [\n    ];\n\n    constructor (private http: Http) {}\n\n    setQuotes(quotes: Quote[]) {\n        this.quotes = quotes;\n        this.quotesChanged.next(this.quotes.slice());\n    }\n\n    addQuote(newQuote: Quote) {\n        this.quotes.push(newQuote);\n    }\n\n    getQuotes() {\n        return this.quotes.slice();\n    }\n\n    getQuote(index: number) {\n        return this.quotes[index];\n    }\n\n    updateQuote(index: number, newQuote: Quote) {\n        const quoteToUpdate = this.quotes[index];\n        const pk = quoteToUpdate.pk;\n        const url = this.baseUrl + '/' + pk + '/';\n        return this.http.put(url, newQuote);\n    }\n\n    deleteQuote(index: number) {\n        const quoteToDelete = this.quotes[index];\n        const pk = quoteToDelete.pk;\n        const url = this.baseUrl + '/' + pk + '/';\n        return this.http.delete(url);\n    }\n}\n","module.exports = \".quote {\\n    margin-bottom: 10px;\\n}\\n\\n.card {\\n    width: 31% !important;\\n    display: inline-block;\\n    margin: 10px;\\n}\\n\\n.searchLabel {\\n    margin-left: 10px;\\n}\\n\\n.searchInput {\\n    width: 30%;\\n    margin-left: 10px;\\n    padding: 6px 12px;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n}\"","module.exports = \"<app-quote-edit \\n    (quoteAdded)=\\\"onQuoteAdded($event)\\\">\\n  </app-quote-edit>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n  </div>\\n</div>\\n<hr>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-5 form-group margin-left\\\">\\n        <label for=\\\"quote\\\" class=\\\"searchLabel\\\">Filter by Person</label>\\n        <input type=\\\"text\\\" class=\\\"searchInput\\\" [(ngModel)]=\\\"filteredStatus\\\">\\n    </div>\\n  <div class=\\\"col-xs-12\\\">\\n    <a href=\\\"#\\\" class=\\\"list-group-item clearfix quote card\\\" \\n    *ngFor=\\\"let quote of quotes | filter:filteredStatus:'person'; let i = index\\\"\\n    (click)=\\\"onEditItem(i)\\\"\\n    >\\n      <div class=\\\"pull-left\\\">\\n        <h4 class=\\\"list-group-item-heading\\\">{{quote.quote}}</h4>\\n        <h4 class=\\\"list-group-item-text\\\">{{quote.person}}</h4>\\n      </div>\\n    </a>\\n  </div>\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Quote } from './quotes.model';\nimport { QuoteService } from './quote.service';\nimport { DataStorageService } from '../shared/data-storage.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-quotes',\n  templateUrl: './quotes.component.html',\n  styleUrls: ['./quotes.component.css']\n})\nexport class QuotesComponent implements OnInit, OnDestroy {\n  quotes: Quote[];\n  private subscription: Subscription;\n  filteredStatus = '';\n\n  constructor(private dataStorageService: DataStorageService, private quoteService: QuoteService) {}\n\n  onGetData() {\n    this.dataStorageService.getQuotes();\n  }\n\n  onQuoteAdded(quote: Quote) {\n    this.quotes.push(quote);\n    console.log(this.quotes);\n  }\n\n  refreshQuotes() {\n    this.quoteService.quotesChanged\n      .subscribe(\n        (quotes: Quote[]) => {\n          this.quotes = quotes;\n        }\n      );\n  }\n\n  onEditItem(index: number) {\n    this.quoteService.startedEditing.next(index);\n  }\n\n  ngOnInit() {\n    this.dataStorageService.getQuotes();\n    this.refreshQuotes();\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n","export class Quote {\n    public quote: string;\n    public person: string;\n    public pk: number;\n\n    constructor(person: string, quote: string, pk: number) {\n        this.person = person;\n        this.quote = quote;\n        this.pk = pk;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { QuoteService } from '../quotes/quote.service';\nimport { Response } from '@angular/http';\nimport { Quote } from '../quotes/quotes.model';\n\n@Injectable()\nexport class DataStorageService {\n\n    constructor(private http: Http, private quoteService: QuoteService) {}\n\n    baseUrl = 'https://calm-savannah-82295.herokuapp.com/quotes';\n\n    storeQuotes(quote: Quote) {\n           return this.http.post(this.baseUrl, quote);\n    }\n\n    getQuotes() {\n        this.http.get(this.baseUrl)\n        .subscribe(\n            (response: Response) => {\n                const quotes: Quote[] = response.json();\n                this.quoteService.setQuotes(quotes);\n            }\n        );\n    }\n\n    // deleteQuote(pk: number) {\n    //     const url = this.baseUrl + '/' + pk;\n    //     this.http.delete(url);\n    // }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}